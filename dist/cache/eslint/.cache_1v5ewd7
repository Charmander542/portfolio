[{"C:\\Code\\Portfolio3\\portfolio\\pages\\404.js":"1","C:\\Code\\Portfolio3\\portfolio\\pages\\api\\hello.js":"2","C:\\Code\\Portfolio3\\portfolio\\pages\\index.js":"3","C:\\Code\\Portfolio3\\portfolio\\pages\\projects\\chessboard.js":"4","C:\\Code\\Portfolio3\\portfolio\\pages\\projects\\hexapod.js":"5","C:\\Code\\Portfolio3\\portfolio\\pages\\projects\\lidar_robot.js":"6","C:\\Code\\Portfolio3\\portfolio\\pages\\projects\\robot_arm.js":"7","C:\\Code\\Portfolio3\\portfolio\\pages\\projects.js":"8","C:\\Code\\Portfolio3\\portfolio\\pages\\_app.js":"9","C:\\Code\\Portfolio3\\portfolio\\pages\\_document.js":"10","C:\\Code\\Portfolio3\\portfolio\\components\\Button\\Button.js":"11","C:\\Code\\Portfolio3\\portfolio\\components\\Contact\\Contact.js":"12","C:\\Code\\Portfolio3\\portfolio\\components\\Contact\\mailer.js":"13","C:\\Code\\Portfolio3\\portfolio\\components\\Header\\Header.js":"14","C:\\Code\\Portfolio3\\portfolio\\components\\Header\\Menu\\Menu.js":"15","C:\\Code\\Portfolio3\\portfolio\\components\\Hero\\Hero.js":"16","C:\\Code\\Portfolio3\\portfolio\\components\\Icons\\external.js":"17","C:\\Code\\Portfolio3\\portfolio\\components\\Icons\\github.js":"18","C:\\Code\\Portfolio3\\portfolio\\components\\Icons\\icon.js":"19","C:\\Code\\Portfolio3\\portfolio\\components\\Icons\\index.js":"20","C:\\Code\\Portfolio3\\portfolio\\components\\Icons\\instagram.js":"21","C:\\Code\\Portfolio3\\portfolio\\components\\Icons\\linkedin.js":"22","C:\\Code\\Portfolio3\\portfolio\\components\\Icons\\mail.js":"23","C:\\Code\\Portfolio3\\portfolio\\components\\Icons\\twitter.js":"24","C:\\Code\\Portfolio3\\portfolio\\components\\Loader\\Loader.js":"25","C:\\Code\\Portfolio3\\portfolio\\components\\Profiles\\Profiles.js":"26","C:\\Code\\Portfolio3\\portfolio\\components\\ProgressIndicator\\ProgressIndicator.js":"27","C:\\Code\\Portfolio3\\portfolio\\components\\Projects\\Projects.js":"28","C:\\Code\\Portfolio3\\portfolio\\components\\Projects\\ProjectTile\\ProjectTile.js":"29","C:\\Code\\Portfolio3\\portfolio\\components\\Scripts\\Scripts.js":"30","C:\\Code\\Portfolio3\\portfolio\\components\\Seo\\Meta.js":"31","C:\\Code\\Portfolio3\\portfolio\\components\\Skills\\Skills.js":"32"},{"size":15226,"mtime":1702443428652,"results":"33","hashOfConfig":"34"},{"size":176,"mtime":1702072458314,"results":"35","hashOfConfig":"34"},{"size":2219,"mtime":1702508080117,"results":"36","hashOfConfig":"34"},{"size":74,"mtime":1702508452376,"results":"37","hashOfConfig":"34"},{"size":71,"mtime":1702508332714,"results":"38","hashOfConfig":"34"},{"size":74,"mtime":1702508446022,"results":"39","hashOfConfig":"34"},{"size":72,"mtime":1702508465806,"results":"40","hashOfConfig":"34"},{"size":72,"mtime":1702508269623,"results":"41","hashOfConfig":"34"},{"size":148,"mtime":1702508188711,"results":"42","hashOfConfig":"34"},{"size":588,"mtime":1702443428653,"results":"43","hashOfConfig":"34"},{"size":955,"mtime":1702443423001,"results":"44","hashOfConfig":"34"},{"size":12222,"mtime":1702443423001,"results":"45","hashOfConfig":"34"},{"size":298,"mtime":1702072458287,"results":"46","hashOfConfig":"34"},{"size":4384,"mtime":1702501621556,"results":"47","hashOfConfig":"34"},{"size":1348,"mtime":1702408140772,"results":"48","hashOfConfig":"34"},{"size":2298,"mtime":1702508974690,"results":"49","hashOfConfig":"34"},{"size":552,"mtime":1702443423003,"results":"50","hashOfConfig":"34"},{"size":658,"mtime":1702443423003,"results":"51","hashOfConfig":"34"},{"size":524,"mtime":1702443423004,"results":"52","hashOfConfig":"34"},{"size":355,"mtime":1702072458298,"results":"53","hashOfConfig":"34"},{"size":549,"mtime":1702443423004,"results":"54","hashOfConfig":"34"},{"size":547,"mtime":1702443423005,"results":"55","hashOfConfig":"34"},{"size":487,"mtime":1702443423005,"results":"56","hashOfConfig":"34"},{"size":541,"mtime":1702443423007,"results":"57","hashOfConfig":"34"},{"size":728,"mtime":1702443423007,"results":"58","hashOfConfig":"34"},{"size":596,"mtime":1702443423008,"results":"59","hashOfConfig":"34"},{"size":793,"mtime":1702443423009,"results":"60","hashOfConfig":"34"},{"size":4315,"mtime":1702498978285,"results":"61","hashOfConfig":"34"},{"size":3137,"mtime":1702443423009,"results":"62","hashOfConfig":"34"},{"size":690,"mtime":1702072458307,"results":"63","hashOfConfig":"34"},{"size":2280,"mtime":1702443423010,"results":"64","hashOfConfig":"34"},{"size":3850,"mtime":1702497645304,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zegduj",{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":2,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Code\\Portfolio3\\portfolio\\pages\\404.js",[],"C:\\Code\\Portfolio3\\portfolio\\pages\\api\\hello.js",[],"C:\\Code\\Portfolio3\\portfolio\\pages\\index.js",[],"C:\\Code\\Portfolio3\\portfolio\\pages\\projects\\chessboard.js",[],"C:\\Code\\Portfolio3\\portfolio\\pages\\projects\\hexapod.js",[],"C:\\Code\\Portfolio3\\portfolio\\pages\\projects\\lidar_robot.js",[],"C:\\Code\\Portfolio3\\portfolio\\pages\\projects\\robot_arm.js",[],"C:\\Code\\Portfolio3\\portfolio\\pages\\projects.js",[],"C:\\Code\\Portfolio3\\portfolio\\pages\\_app.js",[],"C:\\Code\\Portfolio3\\portfolio\\pages\\_document.js",[],"C:\\Code\\Portfolio3\\portfolio\\components\\Button\\Button.js",[],"C:\\Code\\Portfolio3\\portfolio\\components\\Contact\\Contact.js",["135","136"],"import { useState, useEffect, useRef } from \"react\";\r\nimport Filter from \"bad-words\";\r\nimport { MENULINKS } from \"../../constants\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport Fade from \"react-reveal/Fade\";\r\nimport mail from \"./mailer\";\r\nimport gsap from \"gsap\";\r\nimport styles from \"./Contact.module.scss\";\r\n\r\nconst filter = new Filter();\r\nfilter.removeWords(\"hell\", \"god\", \"shit\");\r\n\r\nconst empty = () =>\r\n  toast.error(\"Please fill the required fields\", {\r\n    id: \"error\",\r\n    style: {\r\n      borderRadius: \"10px\",\r\n      background: \"#333\",\r\n      color: \"#fff\",\r\n    },\r\n  });\r\n\r\nconst error = () =>\r\n  toast.error(\"Error sending your message\", {\r\n    id: \"error\",\r\n    style: {\r\n      borderRadius: \"10px\",\r\n      background: \"#333\",\r\n      color: \"#fff\",\r\n    },\r\n  });\r\n\r\nconst success = () =>\r\n  toast.success(\"Message sent successfully\", {\r\n    id: \"success\",\r\n    style: {\r\n      borderRadius: \"10px\",\r\n      background: \"#333\",\r\n      color: \"#fff\",\r\n    },\r\n  });\r\n\r\nconst Contact = () => {\r\n  const initialState = { name: \"\", email: \"\", message: \"\" };\r\n  const [formData, setFormData] = useState(initialState);\r\n  const [mailerResponse, setMailerResponse] = useState(\"not initiated\");\r\n  const [isSending, setIsSending] = useState(false);\r\n  const buttonEl = useRef(null);\r\n\r\n  const handleChange = ({ target }) => {\r\n    const { id, value } = target;\r\n    value.length === 0 ? setIsSending(false) : setIsSending(true);\r\n    setFormData((prevVal) => {\r\n      if (\r\n        value.trim() !== prevVal[id] &&\r\n        value.trim().length > prevVal[id].trim().length\r\n      ) {\r\n        return { ...prevVal, [id]: filter.clean(value.trim()) };\r\n      } else {\r\n        return { ...prevVal, [id]: value };\r\n      }\r\n    });\r\n  };\r\n\r\n  const emptyForm = () => {\r\n    setFormData(initialState);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, message } = {\r\n      name: formData.name,\r\n      email: formData.email,\r\n      message: formData.message,\r\n    };\r\n\r\n    if (name === \"\" || email === \"\" || message === \"\") {\r\n      empty();\r\n      return setMailerResponse(\"empty\");\r\n    }\r\n\r\n    setIsSending(true);\r\n    mail({ name, email, message })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          setMailerResponse(\"success\");\r\n          emptyForm();\r\n        } else {\r\n          setMailerResponse(\"error\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setMailerResponse(\"error\");\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setMailerResponse(\"not initiated\");\r\n    }, 10000);\r\n  }, [mailerResponse]);\r\n\r\n  useEffect(() => {\r\n    buttonEl.current.addEventListener(\"click\", (e) => {\r\n      if (!buttonEl.current.classList.contains(\"active\")) {\r\n        buttonEl.current.classList.add(\"active\");\r\n\r\n        gsap.to(buttonEl.current, {\r\n          keyframes: [\r\n            {\r\n              \"--left-wing-first-x\": 50,\r\n              \"--left-wing-first-y\": 100,\r\n              \"--right-wing-second-x\": 50,\r\n              \"--right-wing-second-y\": 100,\r\n              duration: 0.2,\r\n              onComplete() {\r\n                gsap.set(buttonEl.current, {\r\n                  \"--left-wing-first-y\": 0,\r\n                  \"--left-wing-second-x\": 40,\r\n                  \"--left-wing-second-y\": 100,\r\n                  \"--left-wing-third-x\": 0,\r\n                  \"--left-wing-third-y\": 100,\r\n                  \"--left-body-third-x\": 40,\r\n                  \"--right-wing-first-x\": 50,\r\n                  \"--right-wing-first-y\": 0,\r\n                  \"--right-wing-second-x\": 60,\r\n                  \"--right-wing-second-y\": 100,\r\n                  \"--right-wing-third-x\": 100,\r\n                  \"--right-wing-third-y\": 100,\r\n                  \"--right-body-third-x\": 60,\r\n                });\r\n              },\r\n            },\r\n            {\r\n              \"--left-wing-third-x\": 20,\r\n              \"--left-wing-third-y\": 90,\r\n              \"--left-wing-second-y\": 90,\r\n              \"--left-body-third-y\": 90,\r\n              \"--right-wing-third-x\": 80,\r\n              \"--right-wing-third-y\": 90,\r\n              \"--right-body-third-y\": 90,\r\n              \"--right-wing-second-y\": 90,\r\n              duration: 0.2,\r\n            },\r\n            {\r\n              \"--rotate\": 50,\r\n              \"--left-wing-third-y\": 95,\r\n              \"--left-wing-third-x\": 27,\r\n              \"--right-body-third-x\": 45,\r\n              \"--right-wing-second-x\": 45,\r\n              \"--right-wing-third-x\": 60,\r\n              \"--right-wing-third-y\": 83,\r\n              duration: 0.25,\r\n            },\r\n            {\r\n              \"--rotate\": 60,\r\n              \"--plane-x\": -8,\r\n              \"--plane-y\": 40,\r\n              duration: 0.2,\r\n            },\r\n            {\r\n              \"--rotate\": 40,\r\n              \"--plane-x\": 45,\r\n              \"--plane-y\": -300,\r\n              \"--plane-opacity\": 0,\r\n              duration: 0.375,\r\n              onComplete() {\r\n                setTimeout(() => {\r\n                  buttonEl.current.removeAttribute(\"style\");\r\n                  gsap.fromTo(\r\n                    buttonEl.current,\r\n                    {\r\n                      opacity: 0,\r\n                      y: -8,\r\n                    },\r\n                    {\r\n                      opacity: 1,\r\n                      y: 0,\r\n                      clearProps: true,\r\n                      duration: 0.3,\r\n                      onComplete() {\r\n                        buttonEl.current.classList.remove(\"active\");\r\n                      },\r\n                    }\r\n                  );\r\n                }, 1800);\r\n              },\r\n            },\r\n          ],\r\n        });\r\n\r\n        gsap.to(buttonEl.current, {\r\n          keyframes: [\r\n            {\r\n              \"--text-opacity\": 0,\r\n              \"--border-radius\": 0,\r\n              \"--left-wing-background\": \"#ffda55\",\r\n              \"--right-wing-background\": \"#ffda55\",\r\n              duration: 0.11,\r\n            },\r\n            {\r\n              \"--left-wing-background\": \"#ffda55\",\r\n              \"--right-wing-background\": \"#ffda55\",\r\n              duration: 0.14,\r\n            },\r\n            {\r\n              \"--left-body-background\": \"##ffda55\",\r\n              \"--right-body-background\": \"##ffda55\",\r\n              duration: 0.25,\r\n              delay: 0.1,\r\n            },\r\n            {\r\n              \"--trails-stroke\": 171,\r\n              duration: 0.22,\r\n              delay: 0.22,\r\n            },\r\n            {\r\n              \"--success-opacity\": 1,\r\n              \"--success-x\": 0,\r\n              duration: 0.2,\r\n              delay: 0.15,\r\n            },\r\n            {\r\n              \"--success-stroke\": 0,\r\n              duration: 0.15,\r\n            },\r\n          ],\r\n        });\r\n      }\r\n    });\r\n  }, [buttonEl]);\r\n\r\n  return (\r\n    <section\r\n      className=\"mt-30 w-full relative select-none bg-gray-dark-5 pt-20 sm:pt-10 md:pt-5 lg:pt-1 pb-20\"\r\n      id={MENULINKS[3].ref}\r\n    >\r\n      <div>\r\n        <Toaster />\r\n      </div>\r\n      <div className=\"section-container flex flex-col justify-center\">\r\n        <div className=\"flex flex-col work-wrapper\">\r\n          <div className=\"flex flex-col\">\r\n            <p className=\"uppercase tracking-widest text-gray-light-1 seq\">\r\n              CONTACT\r\n            </p>\r\n            <h1 className=\"text-6xl mt-2 font-medium text-gradient w-fit seq\">\r\n              Contact\r\n            </h1>\r\n          </div>\r\n          <h2 className=\"text-[1.65rem] font-medium md:max-w-lg w-full mt-2 seq\">\r\n            Get In Touch.{\" \"}\r\n          </h2>\r\n        </div>\r\n\r\n        <form className=\"pt-10 sm:mx-auto sm:w-[30rem] md:w-[35rem]\">\r\n          <Fade bottom distance={\"4rem\"}>\r\n            <div className=\"relative\">\r\n              <input\r\n                type=\"text\"\r\n                id=\"name\"\r\n                className=\"block w-full h-12 sm:h-14 px-4 text-xl sm:text-2xl font-mono outline-none border-2 border-yellow bg-transparent rounded-[0.6rem] transition-all duration-200 focus:bg-gray-dark-5  active:bg-gray-dark-5\"\r\n                value={formData.name}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n              <label\r\n                htmlFor=\"name\"\r\n                className=\"absolute top-0 left-0 h-full flex items-center pl-4 text-lg font-mono transform transition-all\"\r\n              >\r\n                Name\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"relative mt-14\">\r\n              <input\r\n                type=\"text\"\r\n                id=\"email\"\r\n                className=\"block w-full h-12 sm:h-14 px-4 text-xl sm:text-2xl font-mono outline-none border-2 border-yellow bg-transparent rounded-[0.6rem] transition-all duration-200 focus:bg-gray-dark-5  active:bg-gray-dark-5\"\r\n                value={formData.email}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n              <label\r\n                htmlFor=\"email\"\r\n                className=\"absolute top-0 left-0 h-full flex items-center pl-4 text-lg font-mono transform transition-all\"\r\n              >\r\n                Email\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"relative mt-14\">\r\n              <textarea\r\n                id=\"message\"\r\n                className=\"block w-full h-auto min-h-[10rem] max-h-[20rem] sm:h-14 py-2 px-4 text-xl sm:text-2xl font-mono outline-none border-2 border-yellow bg-transparent rounded-[0.6rem] transition-all duration-200 focus:bg-gray-dark-5  active:bg-gray-dark-5\"\r\n                value={formData.message}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n              <label\r\n                htmlFor=\"message\"\r\n                className=\"absolute top-0 left-0 h-14 flex items-center pl-4 text-lg font-mono transform transition-all\"\r\n              >\r\n                Message\r\n              </label>\r\n            </div>\r\n          </Fade>\r\n\r\n          {mailerResponse !== \"not initiated\" &&\r\n            (mailerResponse === \"success\" ? (\r\n              <div className=\"hidden\">{success()}</div>\r\n            ) : (\r\n              <div className=\"hidden\">{error()}</div>\r\n            ))}\r\n        </form>\r\n        <div className=\"mt-9 mx-auto link\">\r\n          <button\r\n            className={styles.button}\r\n            ref={buttonEl}\r\n            disabled={\r\n              formData.name === \"\" ||\r\n              formData.email === \"\" ||\r\n              formData.message === \"\"\r\n                ? true\r\n                : false\r\n            }\r\n            onClick={handleSubmit}\r\n          >\r\n            <span className={styles.default}>Send -&gt;</span>\r\n            <span className={styles.success}>\r\n              <svg viewBox=\"0 0 16 16\">\r\n                <polyline points=\"3.75 9 7 12 13 5\"></polyline>\r\n              </svg>\r\n              Sent\r\n            </span>\r\n            <svg className={styles.trails} viewBox=\"0 0 33 64\">\r\n              <path d=\"M26,4 C28,13.3333333 29,22.6666667 29,32 C29,41.3333333 28,50.6666667 26,60\"></path>\r\n              <path d=\"M6,4 C8,13.3333333 9,22.6666667 9,32 C9,41.3333333 8,50.6666667 6,60\"></path>\r\n            </svg>\r\n            <div className={styles.plane}>\r\n              <div className={styles.left}></div>\r\n              <div className={styles.right}></div>\r\n            </div>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <style jsx global>{`\r\n        input,\r\n        label,\r\n        textarea {\r\n          cursor: pointer;\r\n        }\r\n\r\n        input:hover,\r\n        textarea:hover {\r\n          box-shadow: 0 0 0.3rem #7000ff;\r\n        }\r\n\r\n        input:active,\r\n        input:focus,\r\n        textarea:active,\r\n        textarea:focus {\r\n          box-shadow: 0 0 0.3rem #120e16;\r\n        }\r\n\r\n        input:focus + label,\r\n        input:valid + label {\r\n          height: 50%;\r\n          padding-left: 0;\r\n          transform: translateY(-100%);\r\n        }\r\n\r\n        textarea:focus + label,\r\n        textarea:valid + label {\r\n          height: 17%;\r\n          padding-left: 0;\r\n          transform: translateY(-100%);\r\n        }\r\n      `}</style>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","C:\\Code\\Portfolio3\\portfolio\\components\\Contact\\mailer.js",[],"C:\\Code\\Portfolio3\\portfolio\\components\\Header\\Header.js",["137","138"],"import { useState, useCallback, useEffect } from 'react';\r\nimport Image from \"next/image\";\r\nimport Fade from \"react-reveal/Fade\";\r\nimport { MENULINKS } from \"../../constants\";\r\nimport { gsap } from \"gsap/dist/gsap\";\r\nimport { ScrollTrigger } from \"gsap/dist/ScrollTrigger\";\r\n\r\ngsap.registerPlugin(ScrollTrigger);\r\n\r\n\r\nconst useMediaQuery = (width) => {\r\n  const [targetReached, setTargetReached] = useState(false);\r\n\r\n  const updateTarget = useCallback((e) => {\r\n    if (e.matches) {\r\n      setTargetReached(true);\r\n    } else {\r\n      setTargetReached(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const media = window.matchMedia(`(max-width: ${width}px)`);\r\n    media.addListener(updateTarget);\r\n\r\n    // Check on mount (callback is not called until a change occurs)\r\n    if (media.matches) {\r\n      setTargetReached(true);\r\n    }\r\n\r\n    return () => media.removeListener(updateTarget);\r\n  }, []);\r\n\r\n  return targetReached;\r\n};\r\n\r\n\r\nconst Header = ({ children }) => {\r\n  const isBreakpoint = useMediaQuery(768)\r\n  const [activeSection, setActiveSection] = useState('home');\r\n\r\n  useEffect(() => {\r\n    const sections = MENULINKS.map((el) => el.ref);\r\n  \r\n    sections.forEach((section, index) => {\r\n      if (index === sections.length - 1) {\r\n        // Do something else for the last section\r\n        gsap.to(`#${section}`, {\r\n          scrollTrigger: {\r\n            trigger: `#${section}`,\r\n            start: `bottom top-=${document.getElementById('projects').clientWidth + document.getElementById('projects').clientHeight + 100}`,\r\n            markers: 0,\r\n            scrub: true,\r\n            onEnter: () => {\r\n              setActiveSection(section);\r\n              console.log(document.getElementById('projects').clientWidth)\r\n            },\r\n            onEnterBack: () => setActiveSection('projects')\r\n          },\r\n        });\r\n      } else {\r\n        // Apply the scroll effect to all other sections\r\n        gsap.to(`#${section}`, {\r\n          scrollTrigger: {\r\n            trigger: `#${section}`,\r\n            start: \"top top+=100\",\r\n            end: \"bottom bottom-=10\",\r\n            markers: 0,\r\n            scrub: true,\r\n            onEnter: () => setActiveSection(section),\r\n            onEnterBack: () => setActiveSection(section)\r\n          },\r\n        });\r\n      }\r\n    });\r\n  }, []);\r\n  \r\n  \r\n\r\n\r\n  return (\r\n    <nav className=\"w-full fixed top-0 py-4 z-50 select-none bg-gray-dark-5 transition-all duration-300\">\r\n      <Fade>\r\n        <div className=\"flex justify-between section-container\">\r\n          <a href=\"#home\" className=\"link\">\r\n            <Image\r\n              src=\"/cvh.svg\"\r\n              alt=\"CVH\"\r\n              width={30*1.5}\r\n              height={25*1.5}\r\n            />\r\n          </a>\r\n          <div>\r\n            { isBreakpoint ? (\r\n            <div className=\"outer-menu relative\">\r\n              <input\r\n                aria-labelledby=\"menu\"\r\n                className=\"checkbox-toggle link absolute top-0 right-0 w-6 h-6 opacity-0\"\r\n                type=\"checkbox\"\r\n                aria-label=\"menu\"\r\n              />\r\n              <div className=\"hamburger absolute top-2 right-0 w-6 h-6 flex items-center justify-center\">\r\n                <div className=\"relative flex-none w-full bg-white duration-300 flex items-center justify-center\"></div>\r\n              </div>\r\n              {children}\r\n            </div>\r\n            ) : (\r\n              <div className=\"desktopMenu\">\r\n                <ul className=\"flex space-x-4 justify-end\">\r\n                  {MENULINKS.map((el) => (\r\n                    <li\r\n                      key={el.name}\r\n                      className={`p-5 m-0 pb-0 pt-2 ${\r\n                        activeSection === el.ref ? ' border-2 border-yellow rounded-lg' : ''\r\n                      }`}\r\n                    >\r\n                      <a\r\n                        if={el.ref}\r\n                        className={`link inline font-bold text-xl ${\r\n                          activeSection !== el.ref ? 'hover:border-b-2 hover:border-yellow' : ''}`}\r\n                        href={`#${el.ref}`}\r\n                      >\r\n                        {el.name}\r\n                      </a>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </Fade>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Code\\Portfolio3\\portfolio\\components\\Header\\Menu\\Menu.js",[],"C:\\Code\\Portfolio3\\portfolio\\components\\Hero\\Hero.js",["139","140","141","142"],"import { useState, useEffect, useRef } from \"react\";\r\nimport Image from \"next/image\";\r\nimport Typed from \"typed.js\";\r\nimport { gsap, Linear } from \"gsap\";\r\nimport { MENULINKS, TYPED_STRINGS } from \"../../constants\";\r\nimport styles from \"./Hero.module.scss\";\r\nimport Button from \"../Button/Button\";\r\nimport Profiles from \"../Profiles/Profiles\";\r\n\r\nconst Hero = () => {\r\n\r\n  const typedEl = useRef(null);\r\n  const targetSection = useRef(null);\r\n\r\n  const options = {\r\n    strings: TYPED_STRINGS,\r\n    typeSpeed: 50,\r\n    startDelay: 1500,\r\n    backSpeed: 50,\r\n    backDelay: 1500,\r\n    loop: true,\r\n  };\r\n\r\n  useEffect(() => {\r\n    const typed = new Typed(typedEl.current, options);\r\n\r\n    const revealTl = gsap.timeline({ defaults: { ease: Linear.easeNone } });\r\n    revealTl\r\n      .to(targetSection.current, { opacity: 1, duration: 2 })\r\n      .from(\r\n        targetSection.current.querySelectorAll(\".seq\"),\r\n        { opacity: 0, duration: 0.5, stagger: 0.5 },\r\n        \"<\"\r\n      );\r\n\r\n    return () => typed.destroy();\r\n  }, [typedEl, targetSection]);\r\n\r\n  return (\r\n    <section\r\n      ref={targetSection}\r\n      className=\"w-full flex xs:items-center py-8 2xl:container mx-auto xl:px-20 md:px-12 px-4 min-h-screen relative mb-24\"\r\n      id={MENULINKS[0].ref}\r\n      style={{ opacity: 0 }}\r\n    >\r\n      <style global jsx>\r\n        {`\r\n          .typed-cursor {\r\n            font-size: 2rem;\r\n          }\r\n        `}\r\n      </style>\r\n      <div className=\"flex flex-col pt-40 md:pt-0 select-none\">\r\n        <h1\r\n          className={`${styles.intro} font-mono font-bold text-5xl seq`}\r\n        >\r\n          Hello, <br /> I&apos;m&nbsp;\r\n          <span\r\n            ref={typedEl}\r\n            className=\"seq text-5xl text-mush-light font-mono leading-relaxed\"\r\n          ></span>\r\n        </h1>\r\n        <p>\r\n        </p>\r\n        <div className=\"seq\">\r\n          <Profiles />\r\n        </div>\r\n        <div className=\"seq pt-4\">\r\n          <Button href={`#${MENULINKS[3].ref}`} classes=\"link\" type=\"primary\">\r\n            Let&apos;s Talk\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"seq absolute pic -z-1 w-1/2 h-full\">\r\n      <Image \r\n        src=\"/person.png\"\r\n        layout=\"fill\"\r\n        />\r\n      </div>\r\n\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n","C:\\Code\\Portfolio3\\portfolio\\components\\Icons\\external.js",[],"C:\\Code\\Portfolio3\\portfolio\\components\\Icons\\github.js",[],"C:\\Code\\Portfolio3\\portfolio\\components\\Icons\\icon.js",[],"C:\\Code\\Portfolio3\\portfolio\\components\\Icons\\index.js",[],"C:\\Code\\Portfolio3\\portfolio\\components\\Icons\\instagram.js",[],"C:\\Code\\Portfolio3\\portfolio\\components\\Icons\\linkedin.js",[],"C:\\Code\\Portfolio3\\portfolio\\components\\Icons\\mail.js",[],"C:\\Code\\Portfolio3\\portfolio\\components\\Icons\\twitter.js",[],"C:\\Code\\Portfolio3\\portfolio\\components\\Loader\\Loader.js",[],"C:\\Code\\Portfolio3\\portfolio\\components\\Profiles\\Profiles.js",[],"C:\\Code\\Portfolio3\\portfolio\\components\\ProgressIndicator\\ProgressIndicator.js",[],"C:\\Code\\Portfolio3\\portfolio\\components\\Projects\\Projects.js",["143","144"],"import { useEffect, useRef } from \"react\";\r\nimport { MENULINKS, PROJECTS } from \"../../constants\";\r\nimport { gsap, Linear } from \"gsap\";\r\nimport { ScrollTrigger } from \"gsap/dist/ScrollTrigger\";\r\nimport ProjectTile from \"./ProjectTile/ProjectTile\";\r\nimport Button from \"../Button/Button\";\r\n\r\n\r\nconst Projects = ({ isDesktop, clientHeight }) => {\r\n  const targetSection = useRef(null);\r\n  const sectionTitle = useRef(null);\r\n\r\n  useEffect(() => {\r\n    let projectsScrollTrigger;\r\n    let projectsTimeline;\r\n\r\n    if (isDesktop) {\r\n      [projectsTimeline, projectsScrollTrigger] = getProjectsSt();\r\n    } else {\r\n      const projectWrapper =\r\n        targetSection.current.querySelector(\".project-wrapper\");\r\n      projectWrapper.style.width = \"calc(100vw - 1rem)\";\r\n      projectWrapper.style.overflowX = \"scroll\";\r\n    }\r\n\r\n    const [revealTimeline, revealScrollTrigger] = getRevealSt();\r\n\r\n    return () => {\r\n      projectsScrollTrigger && projectsScrollTrigger.kill();\r\n      projectsTimeline && projectsTimeline.kill();\r\n      revealScrollTrigger && revealScrollTrigger.kill();\r\n      revealTimeline && revealTimeline.progress(1);\r\n    };\r\n  }, [targetSection, sectionTitle, isDesktop]);\r\n\r\n  const getRevealSt = () => {\r\n    const revealTl = gsap.timeline({ defaults: { ease: Linear.easeNone } });\r\n    revealTl.from(\r\n      targetSection.current.querySelectorAll(\".seq\"),\r\n      { opacity: 0, duration: 0.5, stagger: 0.5 },\r\n      \"<\"\r\n    );\r\n\r\n    const scrollTrigger = ScrollTrigger.create({\r\n      trigger: targetSection.current,\r\n      start: \"top bottom\",\r\n      end: \"bottom bottom\",\r\n      scrub: 0,\r\n      animation: revealTl,\r\n    });\r\n\r\n    return [revealTl, scrollTrigger];\r\n  };\r\n\r\n  const getProjectsSt = () => {\r\n    const timeline = gsap.timeline({ defaults: { ease: Linear.easeNone } });\r\n    const sidePadding =\r\n      document.body.clientWidth -\r\n      targetSection.current.querySelector(\".inner-container\").clientWidth;\r\n    const elementWidth =\r\n      sidePadding +\r\n      targetSection.current.querySelector(\".project-wrapper\").clientWidth;\r\n    targetSection.current.style.width = `${elementWidth}px`;\r\n    const width = window.innerWidth - elementWidth;\r\n    const duration = `${(elementWidth / window.innerHeight) * 100}%`;\r\n    timeline\r\n      .to(targetSection.current, { x: width })\r\n      .to(sectionTitle.current, { x: -width }, \"<\");\r\n\r\n    const scrollTrigger = ScrollTrigger.create({\r\n      trigger: targetSection.current,\r\n      start: \"bottom bottom\",\r\n      end: duration,\r\n      scrub: 0,\r\n      markers:0,\r\n      pin: true,\r\n      animation: timeline,\r\n      pinSpacing: \"margin\",\r\n    });\r\n\r\n    return [timeline, scrollTrigger];\r\n  };\r\n\r\n  return (\r\n    <section\r\n      ref={targetSection}\r\n      className={`${\r\n        isDesktop && \"min-h-screen\"\r\n      } w-full relative select-none section-container transform-gpu`}\r\n      id={MENULINKS[2].ref}\r\n    >\r\n      <div className=\"flex flex-col py- justify-center h-full\">\r\n        <div\r\n          className=\"flex flex-col inner-container transform-gpu\"\r\n          ref={sectionTitle}\r\n        >\r\n          <p className=\"uppercase tracking-widest text-gray-light-1 seq\">\r\n            PROJECTS\r\n          </p>\r\n          <h1 className=\"text-6xl mt-2 font-medium text-gradient w-fit seq\">\r\n            My Projects\r\n          </h1>\r\n          <h2 className=\"text-[1.65rem] font-medium md:max-w-lg max-w-sm mt-2 seq\">\r\n            Some things I&apos;ve built with love, expertise and a pinch of\r\n            magical ingredients.{\" \"}\r\n          </h2>\r\n        </div>\r\n        <div\r\n          className={`${\r\n            clientHeight > 650 ? \"mt-12\" : \"mt-4\"\r\n          } flex project-wrapper w-fit seq`}\r\n        >\r\n          {PROJECTS.map((project, index) => (\r\n            <ProjectTile\r\n              classes={\"mr-10 xs:mr-12 sm:mr-16\"}\r\n              project={project}\r\n              key={project.name}\r\n            />\r\n          ))}\r\n\r\n            <Button href={`/projects`} classes=\"link pt-4 mr-20 xs:mr-12 sm:mr-16 h-10 w-40 m-auto\" type=\"primary\">\r\n            More Projects\r\n            </Button>\r\n          </div>\r\n      </div>\r\n      <style jsx global>{`\r\n        .project-wrapper::-webkit-scrollbar {\r\n          display: none;\r\n        }\r\n      `}</style>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","C:\\Code\\Portfolio3\\portfolio\\components\\Projects\\ProjectTile\\ProjectTile.js",["145","146","147"],"import { useEffect, useRef } from \"react\";\r\nimport Image from \"next/image\";\r\nimport VanillaTilt from \"vanilla-tilt\";\r\nimport styles from \"./ProjectTile.module.scss\";\r\n\r\nconst ProjectTile = ({ project, classes, isDesktop }) => {\r\n  const { name, image, blurImage, description, gradient, url, tech } = project;\r\n  const projectCard = useRef(null);\r\n  let additionalClasses = \"\";\r\n  if (classes) {\r\n    additionalClasses = classes;\r\n  }\r\n\r\n  const options = {\r\n    max: 10,\r\n    speed: 400,\r\n    glare: true,\r\n    \"max-glare\": 0.2,\r\n    gyroscope: false,\r\n  };\r\n\r\n  useEffect(() => {\r\n    VanillaTilt.init(projectCard.current, options);\r\n  }, [projectCard]);\r\n\r\n  return (\r\n    <a\r\n      href={url}\r\n      className={`overflow-hidden rounded-3xl ${additionalClasses}`}\r\n      ref={projectCard}\r\n      \r\n      rel=\"noreferrer\"\r\n      style={{\r\n        maxWidth: isDesktop ? \"calc(100vw - 2rem)\" : \"calc(100vw - 4rem)\",\r\n        flex: \"1 0 auto\",\r\n        WebkitMaskImage: \"-webkit-radial-gradient(white, black)\",\r\n      }}\r\n    >\r\n      <div\r\n        className={`h-[25rem] w-[38rem] bg-black ${styles.ProjectTile} rounded-3xl relative p-6 flex flex-col justify-between max-w-full`}\r\n        style={{\r\n          background: `linear-gradient(90deg, ${gradient[0]} 0%, ${gradient[1]} 100%)`,\r\n        }}\r\n      >\r\n        <img\r\n          src=\"/project-bg.svg\"\r\n          alt=\"project\"\r\n          className=\"absolute w-full h-full top-0 left-0 object-cover opacity-30\"\r\n        />\r\n        <Image\r\n          //placeholder=\"blur\"\r\n          //blurDataURL={blurImage}\r\n          src={image}\r\n          alt={name}\r\n          layout=\"fill\"\r\n          className={`${styles.projectImage} z-0`}\r\n        />\r\n        <div\r\n          className=\"absolute top-0 left-0 w-full h-20\"\r\n          style={{\r\n            background: `linear-gradient(180deg, ${gradient[0]} 0%, rgba(0,0,0,0) 100%)`,\r\n          }}\r\n        ></div>\r\n        <div\r\n          className=\"absolute bottom-0 left-0 w-full h-32\"\r\n          style={{\r\n            background: `linear-gradient(0deg, ${gradient[0]} 10%, rgba(0,0,0,0) 100%)`,\r\n          }}\r\n        ></div>\r\n        <h1\r\n          className=\"font-medium text-3xl sm:text-4xl z-10 pl-2 transform-gpu\"\r\n          style={{ transform: \"translateZ(3rem)\" }}\r\n        >\r\n          {name}\r\n        </h1>\r\n        <div\r\n          className={`\r\n            ${styles.techIcons} w-1/2 h-full absolute left-24 top-0 sm:flex items-center hidden\r\n          `}\r\n        >\r\n          <div className=\"flex flex-col pb-8\">\r\n            {project.tech.map((el, i) => (\r\n              <img\r\n                className={`${i % 2 === 0 && \"ml-16\"} mb-4`}\r\n                src={`/skills/${el}.svg`}\r\n                alt={el}\r\n                height={45}\r\n                width={45}\r\n                key={el}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <h2\r\n          className=\"text-lg z-10 tracking-wide font-medium text-white transform-gpu\"\r\n          style={{ transform: \"translateZ(0.8rem)\" }}\r\n        >\r\n          {description}\r\n        </h2>\r\n      </div>\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default ProjectTile;\r\n","C:\\Code\\Portfolio3\\portfolio\\components\\Scripts\\Scripts.js",[],"C:\\Code\\Portfolio3\\portfolio\\components\\Seo\\Meta.js",[],"C:\\Code\\Portfolio3\\portfolio\\components\\Skills\\Skills.js",[],{"ruleId":"148","severity":2,"message":"149","line":349,"column":14,"nodeType":"150","messageId":"151","endLine":349,"endColumn":17},{"ruleId":"148","severity":2,"message":"152","line":349,"column":18,"nodeType":"150","messageId":"151","endLine":349,"endColumn":24},{"ruleId":"153","severity":1,"message":"154","line":32,"column":6,"nodeType":"155","endLine":32,"endColumn":8,"suggestions":"156"},{"ruleId":"148","severity":2,"message":"157","line":118,"column":25,"nodeType":"150","messageId":"151","endLine":118,"endColumn":36},{"ruleId":"153","severity":1,"message":"158","line":37,"column":6,"nodeType":"155","endLine":37,"endColumn":30,"suggestions":"159"},{"ruleId":"148","severity":2,"message":"152","line":46,"column":14,"nodeType":"150","messageId":"151","endLine":46,"endColumn":20},{"ruleId":"148","severity":2,"message":"149","line":46,"column":21,"nodeType":"150","messageId":"151","endLine":46,"endColumn":24},{"ruleId":"160","severity":1,"message":"161","line":75,"column":7,"nodeType":"162","endLine":78,"endColumn":11},{"ruleId":"148","severity":2,"message":"149","line":126,"column":14,"nodeType":"150","messageId":"151","endLine":126,"endColumn":17},{"ruleId":"148","severity":2,"message":"152","line":126,"column":18,"nodeType":"150","messageId":"151","endLine":126,"endColumn":24},{"ruleId":"153","severity":1,"message":"158","line":24,"column":6,"nodeType":"155","endLine":24,"endColumn":19,"suggestions":"163"},{"ruleId":"164","severity":1,"message":"165","line":45,"column":9,"nodeType":"162","endLine":49,"endColumn":11},{"ruleId":"164","severity":1,"message":"165","line":83,"column":15,"nodeType":"162","endLine":90,"endColumn":17},"react/no-unknown-property","Unknown property 'jsx' found","JSXAttribute","unknownProp","Unknown property 'global' found","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'updateTarget' and 'width'. Either include them or remove the dependency array.","ArrayExpression",["166"],"Unknown property 'if' found","React Hook useEffect has a missing dependency: 'options'. Either include it or remove the dependency array.",["167"],"jsx-a11y/alt-text","Image elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["168"],"@next/next/no-img-element","Do not use <img>. Use Image from 'next/image' instead. See https://nextjs.org/docs/messages/no-img-element.",{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},"Update the dependencies array to be: [updateTarget, width]",{"range":"175","text":"176"},"Update the dependencies array to be: [typedEl, targetSection, options]",{"range":"177","text":"178"},"Update the dependencies array to be: [options, projectCard]",{"range":"179","text":"180"},[903,905],"[updateTarget, width]",[1029,1053],"[typedEl, targetSection, options]",[640,653],"[options, projectCard]"]